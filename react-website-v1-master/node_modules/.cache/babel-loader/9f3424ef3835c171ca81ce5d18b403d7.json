{"ast":null,"code":"const crypto = require(\"crypto\"),\n      SHA256 = message => crypto.createHash(\"sha256\").update(message).digest(\"hex\");\n\nclass Block {\n  constructor() {\n    let timestamp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    this.timestamp = timestamp;\n    this.data = data;\n    this.hash = this.getHash();\n    this.prevHash = \"\";\n  }\n\n  getHash() {\n    return SHA256(JSON.stringify(this.data) + this.timestamp + this.prevHash);\n  }\n\n}\n\nclass Blockchain {\n  constructor() {\n    this.chain = [new Block(Date.now().toString())];\n  }\n\n  getLastBlock() {\n    return this.chain[this.chain.length - 1];\n  }\n\n  addBlock(block) {\n    block.prevHash = this.getLastBlock().hash;\n    block.hash = block.getHash();\n    this.chain.push(block);\n  }\n\n}\n\nexport const createNew = DetailRequest => {\n  const NewBlock = new Blockchain();\n  NewBlock.addBlock(new Block(Date.now().toString(), [\"0DetailRequest\"]));\n  console.log(NewBlock.chain);\n};","map":{"version":3,"names":["crypto","require","SHA256","message","createHash","update","digest","Block","constructor","timestamp","data","hash","getHash","prevHash","JSON","stringify","Blockchain","chain","Date","now","toString","getLastBlock","length","addBlock","block","push","createNew","DetailRequest","NewBlock","console","log"],"sources":["C:/Users/chunduri bhavana/Downloads/react-website-v1-master/react-website-v1-master/src/BlockChainFolder/CreateBlock.js"],"sourcesContent":["\r\nconst crypto = require(\"crypto\"), SHA256 = message => crypto.createHash(\"sha256\").update(message).digest(\"hex\");\r\nclass Block{\r\n    constructor(timestamp=\"\",data=[])\r\n    {\r\n        this.timestamp=timestamp;\r\n        this.data=data;\r\n        this.hash=this.getHash();\r\n        this.prevHash=\"\";\r\n\r\n    }\r\n    getHash(){\r\n        return SHA256(JSON.stringify(this.data)+this.timestamp+this.prevHash);\r\n    }\r\n}\r\nclass Blockchain{\r\n    constructor(){\r\n        this.chain=[new Block(Date.now().toString())];\r\n\r\n    }\r\n    getLastBlock(){\r\nreturn this.chain[this.chain.length - 1];\r\n    }\r\n    addBlock(block){\r\n        block.prevHash=this.getLastBlock().hash;\r\n        block.hash=block.getHash();\r\n        this.chain.push(block);\r\n    }\r\n}\r\nexport const createNew = DetailRequest =>{\r\nconst NewBlock =new Blockchain();\r\nNewBlock.addBlock(new Block(Date.now().toString(),[\"0DetailRequest\"]))\r\nconsole.log(NewBlock.chain);}\r\n"],"mappings":"AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;AAAA,MAAkCC,MAAM,GAAGC,OAAO,IAAIH,MAAM,CAACI,UAAP,CAAkB,QAAlB,EAA4BC,MAA5B,CAAmCF,OAAnC,EAA4CG,MAA5C,CAAmD,KAAnD,CAAtD;;AACA,MAAMC,KAAN,CAAW;EACPC,WAAW,GACX;IAAA,IADYC,SACZ,uEADsB,EACtB;IAAA,IADyBC,IACzB,uEAD8B,EAC9B;IACI,KAAKD,SAAL,GAAeA,SAAf;IACA,KAAKC,IAAL,GAAUA,IAAV;IACA,KAAKC,IAAL,GAAU,KAAKC,OAAL,EAAV;IACA,KAAKC,QAAL,GAAc,EAAd;EAEH;;EACDD,OAAO,GAAE;IACL,OAAOV,MAAM,CAACY,IAAI,CAACC,SAAL,CAAe,KAAKL,IAApB,IAA0B,KAAKD,SAA/B,GAAyC,KAAKI,QAA/C,CAAb;EACH;;AAXM;;AAaX,MAAMG,UAAN,CAAgB;EACZR,WAAW,GAAE;IACT,KAAKS,KAAL,GAAW,CAAC,IAAIV,KAAJ,CAAUW,IAAI,CAACC,GAAL,GAAWC,QAAX,EAAV,CAAD,CAAX;EAEH;;EACDC,YAAY,GAAE;IAClB,OAAO,KAAKJ,KAAL,CAAW,KAAKA,KAAL,CAAWK,MAAX,GAAoB,CAA/B,CAAP;EACK;;EACDC,QAAQ,CAACC,KAAD,EAAO;IACXA,KAAK,CAACX,QAAN,GAAe,KAAKQ,YAAL,GAAoBV,IAAnC;IACAa,KAAK,CAACb,IAAN,GAAWa,KAAK,CAACZ,OAAN,EAAX;IACA,KAAKK,KAAL,CAAWQ,IAAX,CAAgBD,KAAhB;EACH;;AAZW;;AAchB,OAAO,MAAME,SAAS,GAAGC,aAAa,IAAG;EACzC,MAAMC,QAAQ,GAAE,IAAIZ,UAAJ,EAAhB;EACAY,QAAQ,CAACL,QAAT,CAAkB,IAAIhB,KAAJ,CAAUW,IAAI,CAACC,GAAL,GAAWC,QAAX,EAAV,EAAgC,CAAC,gBAAD,CAAhC,CAAlB;EACAS,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,KAArB;AAA6B,CAHtB"},"metadata":{},"sourceType":"module"}