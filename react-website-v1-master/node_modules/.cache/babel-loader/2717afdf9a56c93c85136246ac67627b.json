{"ast":null,"code":"import axios, { Axios } from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./Type\";\nimport setJWTToken from \"./setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport http from \"../http-common\";\nexport const createNewUser = newUser => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    alert(\"Registration  Successfull!!!\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const login = (LoginRequest, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decoded = jwt_decode(token);\n    alert(\"Login Successfull!!!\");\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    this.dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nclass UploadFilesService {\n  upload(file, onUploadProgress) {\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    return axios.post(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      onUploadProgress\n    });\n  }\n\n  getFiles() {\n    return axios.get(\"/files\");\n  }\n\n}\n\nexport default new UploadFilesService();","map":{"version":3,"names":["axios","Axios","GET_ERRORS","SET_CURRENT_USER","setJWTToken","jwt_decode","http","createNewUser","newUser","dispatch","post","alert","type","payload","err","response","data","login","LoginRequest","history","res","token","localStorage","setItem","decoded","UploadFilesService","upload","file","onUploadProgress","formData","FormData","append","headers","getFiles","get"],"sources":["C:/Users/chunduri bhavana/Downloads/react-website-v1-master/react-website-v1-master/src/SecurityActions.js"],"sourcesContent":["import axios, { Axios } from \"axios\";\r\nimport { GET_ERRORS,SET_CURRENT_USER } from \"./Type\";\r\nimport setJWTToken from \"./setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport http from \"../http-common\";\r\n\r\n\r\nexport const createNewUser = newUser => async dispatch => {\r\n    \r\n    try {\r\n      await axios.post(\"/api/users/register\", newUser);\r\n      \r\n      alert(\"Registration  Successfull!!!\");\r\n     \r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  export const login =(LoginRequest,history) => async dispatch => {\r\n    try {\r\n      \r\n      const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      setJWTToken(token);\r\n      const decoded = jwt_decode(token);\r\n      alert(\"Login Successfull!!!\");\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n      });\r\n    } catch (err) {\r\n      this.dispatch({\r\n        type: GET_ERRORS,\r\n       payload: err.response.data\r\n      });\r\n      \r\n    }\r\n  };\r\n \r\n  class UploadFilesService {\r\n    upload(file, onUploadProgress) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      return axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        onUploadProgress,\r\n      });\r\n    }\r\n    getFiles() {\r\n      return axios.get(\"/files\");\r\n    }\r\n  }\r\n  export default new UploadFilesService();\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B;AACA,SAASC,UAAT,EAAoBC,gBAApB,QAA4C,QAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAGA,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI,MAAMC,QAAN,IAAkB;EAEtD,IAAI;IACF,MAAMT,KAAK,CAACU,IAAN,CAAW,qBAAX,EAAkCF,OAAlC,CAAN;IAEAG,KAAK,CAAC,8BAAD,CAAL;IAEAF,QAAQ,CAAC;MACPG,IAAI,EAAEV,UADC;MAEPW,OAAO,EAAE;IAFF,CAAD,CAAR;EAID,CATD,CASE,OAAOC,GAAP,EAAY;IACZL,QAAQ,CAAC;MACPG,IAAI,EAAEV,UADC;MAEPW,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;IAFf,CAAD,CAAR;EAID;AACF,CAjBI;AAoBL,OAAO,MAAMC,KAAK,GAAE,CAACC,YAAD,EAAcC,OAAd,KAA0B,MAAMV,QAAN,IAAkB;EAC9D,IAAI;IAEF,MAAMW,GAAG,GAAG,MAAMpB,KAAK,CAACU,IAAN,CAAW,kBAAX,EAA+BQ,YAA/B,CAAlB;IACA,MAAM;MAAEG;IAAF,IAAYD,GAAG,CAACJ,IAAtB;IACAM,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;IACAjB,WAAW,CAACiB,KAAD,CAAX;IACA,MAAMG,OAAO,GAAGnB,UAAU,CAACgB,KAAD,CAA1B;IACAV,KAAK,CAAC,sBAAD,CAAL;IACAF,QAAQ,CAAC;MACPG,IAAI,EAAET,gBADC;MAEPU,OAAO,EAAEW;IAFF,CAAD,CAAR;EAID,CAZD,CAYE,OAAOV,GAAP,EAAY;IACZ,KAAKL,QAAL,CAAc;MACZG,IAAI,EAAEV,UADM;MAEbW,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;IAFT,CAAd;EAKD;AACF,CApBM;;AAsBP,MAAMS,kBAAN,CAAyB;EACvBC,MAAM,CAACC,IAAD,EAAOC,gBAAP,EAAyB;IAC7B,IAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;IACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;IACA,OAAO3B,KAAK,CAACU,IAAN,CAAW,SAAX,EAAsBmB,QAAtB,EAAgC;MACrCG,OAAO,EAAE;QACP,gBAAgB;MADT,CAD4B;MAIrCJ;IAJqC,CAAhC,CAAP;EAMD;;EACDK,QAAQ,GAAG;IACT,OAAOjC,KAAK,CAACkC,GAAN,CAAU,QAAV,CAAP;EACD;;AAbsB;;AAezB,eAAe,IAAIT,kBAAJ,EAAf"},"metadata":{},"sourceType":"module"}