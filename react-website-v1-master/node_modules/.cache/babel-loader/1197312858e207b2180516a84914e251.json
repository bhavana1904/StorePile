{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chunduri bhavana\\\\Downloads\\\\react-website-v1-master\\\\react-website-v1-master\\\\src\\\\UploadFiles.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"./components/Button\";\nimport { Upload } from \"./SecurityActions\";\nimport \"./UploadFiles.css\";\nimport InNavbar from './InNavbar';\n\nclass UploadFiles extends Component {\n  constructor() {\n    super();\n\n    this.onFileUpload = e => {\n      e.preventDefault();\n\n      docName: this.state.docName.name;\n\n      docData: this.state.docData;\n\n      docType: this.state.docData.type;\n\n      let formData = new FormData();\n      formData.append(docName, docData, docType);\n      this.props.Upload(formData);\n    };\n\n    this.fileData = () => {\n      if (this.state.docdata) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }\n        }, \"File Details:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 16\n          }\n        }, \"File Name: \", this.state.docdata.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }\n        }, \"File Type: \", this.state.docdata.type), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }\n        }, \"Last Modified:\", \" \", this.state.docdata.lastModifiedDate.toDateString()));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        }, \"Choose before Pressing the Upload button\"));\n      }\n    };\n\n    this.state = {\n      docName: \"\",\n      docType: \"\",\n      docData: null\n    };\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onFileUpload = this.onFileUpload.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onFileChange(e) {\n    this.setState({\n      docdata: e.target.files[0]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, \"Drop file to upload\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://100dayscss.com/codepen/upload.svg\",\n      className: \"upload-icon\",\n      alt: \"uploadimg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"upload-input\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onFileUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, \"Upload file\")));\n  }\n\n}\n\nUploadFiles.propTypes = {\n  Upload: PropTypes.func.isRequired // errors: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  Upload\n})(UploadFiles);","map":{"version":3,"names":["React","Component","PropTypes","connect","Button","Upload","InNavbar","UploadFiles","constructor","onFileUpload","e","preventDefault","docName","state","name","docData","docType","type","formData","FormData","append","props","fileData","docdata","lastModifiedDate","toDateString","onFileChange","bind","componentWillReceiveProps","nextProps","errors","setState","target","files","render","propTypes","func","isRequired","mapStateToProps"],"sources":["C:/Users/chunduri bhavana/Downloads/react-website-v1-master/react-website-v1-master/src/UploadFiles.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"./components/Button\";\r\nimport { Upload } from \"./SecurityActions\"\r\nimport \"./UploadFiles.css\";\r\nimport InNavbar from './InNavbar';\r\nclass UploadFiles extends Component {\r\n    constructor() \r\n    {\r\n      super();\r\n      this.state = {\r\n        docName:\"\",\r\n        docType:\"\",\r\n        docData: null\r\n      };\r\n    \r\n      \r\n        this.onFileChange = this.onFileChange.bind(this);\r\n          this.onFileUpload= this.onFileUpload.bind(this);\r\n      };\r\n      componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n          this.setState({ errors: nextProps.errors });\r\n        }\r\n      }\r\n  onFileChange(e) {\r\n  this.setState({ docdata: e.target.files[0] });}\r\n  onFileUpload = (e) => {\r\n    e.preventDefault();\r\n    docName:this.state.docName.name;\r\n     docData : this.state.docData;\r\n     docType:this.state.docData.type\r\n    let formData=new FormData()\r\n    formData.append(\r\n     docName,\r\n     docData,\r\n     docType\r\n\r\n    )\r\n      this.props.Upload(formData)\r\n    };\r\n    fileData = () => {\r\n        if (this.state.docdata) {\r\n    return (\r\n            <div>\r\n              <h2>File Details:</h2>\r\n               <p>File Name: {this.state.docdata.name}</p>\r\n               <p>File Type: {this.state.docdata.type}</p>\r\n               <p>Last Modified:{\" \"}\r\n                  {this.state.docdata.lastModifiedDate.toDateString()}\r\n                </p>\r\n                </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div>\r\n                <br />\r\n                <h4>Choose before Pressing the Upload button</h4>\r\n              </div>\r\n            );\r\n          }\r\n        };  \r\n  \r\n    render(){\r\n       \r\n  return (\r\n  <>\r\n  <InNavbar />\r\n    <div className=\"frame\">\r\n\t<div className=\"center\">\r\n\t\t<div className=\"title\">\r\n\t\t\t<h1>Drop file to upload</h1>\r\n\t\t</div>\r\n\r\n\t\t<div className=\"dropzone\" >\r\n\t\t\t<img src=\"http://100dayscss.com/codepen/upload.svg\" className=\"upload-icon\" alt='uploadimg' />\r\n\t\t\t<input type=\"file\" className=\"upload-input\" onChange={this.onFileChange} />\r\n\t\t</div>\r\n\t</div>\r\n    <Button onClick={this.onFileUpload}>Upload file</Button>\r\n\r\n</div>\r\n</>\r\n  )\r\n}\r\n}\r\nUploadFiles.propTypes = {\r\n  Upload: PropTypes.func.isRequired,\r\n // errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { Upload }\r\n)(UploadFiles);"],"mappings":"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"},"metadata":{},"sourceType":"module"}